Import java.util.Arrays;
import java.util.Comparator;

public class Act4GreedyAlgo {

    // Function to get maximum value
    private static double getMaxValue(ItemValue[] arr, int capacity) {
        // Sorting items by profit/weight ratio in descending order
        Arrays.sort(arr, (item1, item2) -> Double.compare((double) item2.profit / item2.weight,
                (double) item1.profit / item1.weight));

        double totalValue = 0.0;

        for (ItemValue item : arr) {
            int curWt = item.weight;
            int curVal = item.profit;

            if (capacity >= curWt) {
                // Take the whole item
                capacity -= curWt;
                totalValue += curVal;
            } else {
                // Take fraction of the item
                totalValue += (curVal * ((double) capacity / curWt));
                break; // Knapsack is full
            }
        }

        return totalValue;
    }

    static class ItemValue {
        int profit, weight;

        public ItemValue(int profit, int weight) {
            this.profit = profit;
            this.weight = weight;
        }
    }

    public static void main(String[] args) {
        ItemValue[] arr = {
                new ItemValue(60, 10),
                new ItemValue(100, 20),
                new ItemValue(120, 30)
        };

        int capacity = 50;
        double maxValue = getMaxValue(arr, capacity);
        System.out.println("Maximum value in Knapsack = " + maxValue);
    }
}
